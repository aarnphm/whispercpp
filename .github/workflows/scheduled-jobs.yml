name: scheduled-jobs
on:
  schedule:
    - cron: "30 01 * * *"
  workflow_dispatch:
defaults:
  run:
    shell: bash --noprofile --norc -exo pipefail {0}
env:
  BRANCH: origin/main
jobs:
  update-submodules:
    if: github.repository_owner == 'aarnphm'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Import bot's GPG key for signing commits
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Running update submodules
        env:
          GIT_AUTHOR_NAME: "Aaron Pham"
          GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
        run: |
          git config --global user.name "Aaron Pham"
          git config --global user.email "${{ steps.import-gpg.outputs.email }}"
          git submodule update --init --recursive
          git pull --recurse-submodules
          git submodule update --remote
          git add extern && git commit -S --signoff -m "cron: update submodules to latest commits [generated]"
          git push origin ${{ env.BRANCH }}

  run-formatter:
    if: github.repository_owner == 'aarnphm'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Import bot's GPG key for signing commits
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
      - uses: cachix/install-nix-action@v16
        name: Setup nix setup
        with:
          nix_path: 'nixpkgs=./nix'
      - name: Pushing changed files
        env:
          GIT_AUTHOR_NAME: "Aaron Pham"
          GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
        run: |
          git config --global user.name "Aaron Pham"
          git config --global user.email "${{ steps.import-gpg.outputs.email }}"
          nix-shell
          treefmt
          git add . && git commit -S --signoff -m "cron: Running formatting jobs [generated]"
          git push origin ${{ env.BRANCH }}
